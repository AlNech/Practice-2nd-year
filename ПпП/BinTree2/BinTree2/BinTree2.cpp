/*******************************************************************
Задача:
Информация об абитуриентах Урюпинского университета представлена следующим
набором данных: идентификатор (уникальное натуральное число), фамилия, имя, место жительства, средний балл ЕГЭ.
Построить бинарное дерево поиска, ключом которого является идентификатор.

Обеспечить:
а) поиск абитуриента по идентификатору;
б) поиск абитуриентов по среднему баллу ЕГЭ (поиск типа «от и до...»);
в) поиск всех абитуриентов определенного места жительства;
г) выдачу всего списка абитуриентов;
д) удаление информации об абитуриенте по идентификатору;


Предмет: ПпП
Автор: Нечунаева А.И.
Дата: 08.12.2021
********************************************************************/

#include <iostream>
#include <locale.h>
#include <string>
#include <windows.h>

#include "Student.h"
#include "StudUnivTree.h"

using namespace std;

int main()
{
	// Локализация по кириллице
	SetConsoleCP(1251);
	SetConsoleOutputCP(1251);
	setlocale(LC_ALL, "Russian");

	// ------ Формирование базы данных (бинарное дерево поиска) о персонах
	StudUnivTree dataBase;

	// Вставка в базу данных объектов, созданных как локальные
	Student s1(1, "Главатских", "Георгий", "ул. Ракетная, 43", 76);
	dataBase.insert(s1);
	Student s2(2, "Безруких", "Виктор", "ул. Ленина, 105", 83);
	dataBase.insert(s2);
	Student s3(3, "Смирнов", "Глеб", "ул. Володавская, 15", 63);
	Student s4(6, "Иванов", "Павел", "ул. Пушкинская, 67", 78);
	// Вставка в базу данных объектов, созданных в динамической памяти
	dataBase.insert(*new Student(3, "Смирнов", "Глеб", "ул. Володавская, 15", 63));
	dataBase.insert(*new Student(4, "Щербаков", "Михаил", "ул. Союзная, 10", 90));

	dataBase.insert(*new Student(5, "Рудских", "Игорь", "ул. Метталургов, 24", 54));
	dataBase.insert(*new Student(6, "Иванов", "Павел", "ул. Пушкинская, 67", 78));


	cout << "База данных:" << endl;
	cout << dataBase << endl;

	// ------ Поиск в базе данных по ключу
	int key = 1; 
	if (dataBase.search(key, s1)) {
		cout << "Поиск персоны с ID = " << key << " успешен:" << endl;
		cout << s1 << endl << endl;
	}
	else
		cout << "Поиск персоны с ID = " << key << " не успешен." << endl << endl;


	// ------ Удаление объекта из базы данных по ключу
	key = 1; 
	if (dataBase.erase(key)) {
		cout << "Персона с ID = " << key << " удалена:" << endl;
		cout << "База данных:" << endl;
		cout << dataBase;
	}
	else
		cout << "Удаляемая персона с ID = " << key << " не обнаружена." << endl;

	// ------ Поиск в базе данных по месту жительства
	string adress = "ул. Ленина, 105";
	if (dataBase.searchadress(adress, s1)) {
		cout << "Поиск персоны с адресом = " << adress << " успешен:" << endl;
		cout << s1 << endl << endl;
	}
	else
		cout << "Поиск персоны с адресом = " << adress << " не успешен." << endl << endl;

	//поиск абитуриентов по среднему баллу ЕГЭ (поиск типа «от и до...»)
	int minB = 60;//от 60 баллов
	int maxB = 80;//до 80
	cout << "поиск абитуриентов по среднему баллу ЕГЭ от "<< minB<<" до "<< maxB << endl;
	dataBase.searchball(minB, maxB, s1);
	

	//Создание нового дерева с ключом фамилией
	StudUnivTree dataBase2;
	cout << "Новая база данных с ключом - фамилией" << endl;
	dataBase2.DoNewTree(s4);
	dataBase2.DoNewTree(s2);
	dataBase2.DoNewTree(s3);
	cout << dataBase2;
	system("pause");
	return 0;
}